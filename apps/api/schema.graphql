# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ModificadoPorType {
  accion: String
  fecha: Int
  usuario: String
  valorActual: [JSON!]
  valorAnterior: [JSON!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type AuthType {
  contrasena: String
  usuario: String
  activo: Boolean
  roles: [JSONObject!]
  guards: [String!]
  controles: [String!]
  asigPermisos: [String!]
  estatus: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type TelefonoType {
  numero: String
}

type PuestoType {
  fechaAsignacion: Int
  isr: Float
  puesto: String
  sueldo: Float
  activo: Boolean
}

type EmpleadoType {
  _id: ID
  avatar: String
  activo: Boolean
  calle: String
  colonia: String
  correo: String
  fechaBaja: Int
  fechaIngreso: Int
  nombreCompleto: String
  telefono: [TelefonoType!]
  auth: AuthType
  modificadoPor: [ModificadoPorType!]
  puesto: [PuestoType!]
  deptoId: ID
  deptoEmpleado: DeptoType
}

type DatosSesionType {
  _id: ID!
  activo: Boolean!
  auth: AuthType!
  avatar: String
  nombreCompleto: String!
  deptoId: ID
}

type LoginRespuestaType {
  token: String!
  datosSesion: DatosSesionType!
}

type RolesType {
  _id: ID
  idEmpleado: ID
  roles: [JSONObject!]
}

type DocumentoType {
  _id: ID
  seguimiento: String!
  acuseUrl: String
  ano: Int
  asunto: String
  comentario: String
  dependencia: String
  docUrl: String
  enviadoPor: String
  esInterno: Boolean
  fechaLimiteEntrega: Int
  fechaRecepcion: Int
  fechaTerminado: Int
  folio: String
  identificadorDoc: String
  proceso: String
  ref: [String!]
  tipoDoc: String
  usuarioFolio: String
  usuarios: [String!]
  esRef: Boolean
  resolveEmpleado: EmpleadoType
  resolverEmpleadoFolio: EmpleadoType
  resolveEmpleadoEnviado: [EmpleadoType!]
}

type NotificacionType {
  _id: ID
  descripcion: String
  icono: String
  idUsuario: ID
  imagen: String
  leido: Boolean
  link: String
  tiempo: Int
  titulo: String
  usarRouter: Boolean
}

type DeptoType {
  _id: ID
  nombre: String
  centroGestor: String
  puestos: [String!]
}

type BombaType {
  activo: Boolean
  diametro: Float
  eficiencia: Float
  evidenciaInst: [String!]
  evidenciaRetiro: [String!]
  fechaInstalacion: Date
  fechaRetiro: Date
  id: Int
  lts: Float
  marca: String
  model: String
  motivoRet: String
  noImpulsores: Int
  noSerie: String
  observaciones: String
  rpm: Int
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type InstalacionType {
  activo: Boolean
  diamAdeme: Float
  diamCol: Float
  diamPerforacion: Float
  direccion: String
  longCol: Float
  nombre: String
  profPozo: Float
  tipoInstalacion: String
}

type MedidorType {
  activo: Boolean
  fechaInstalacion: Date
  fechaRetiro: Date
  lectura: [LecturaType!]
  medidor: String
  reciboCfe: [RecibosType!]
  servicio: String
}

type LecturaType {
  lectura: Float
  mes: Meses
}

enum Meses {
  Enero
  Febrero
  Marzo
  Abril
  Mayo
  Junio
  Julio
  Agosto
  Septiembre
  Octubre
  Noviembre
  Diciembre
}

type RecibosType {
  costoKw: Float
  fecha: Date
  imgRecibo: String
  lectura: Float
  pago: Float
}

type MotorType {
  activo: Boolean
  amperaje: Float
  evidenciaInst: [String!]
  evidenciaRetiro: [String!]
  factPotencia: Float
  fechaInstalacion: Date
  fechaRetiro: Date
  hp: Float
  id: Int
  marca: String
  model: String
  motivoRet: String
  noSerie: String
  observaciones: String
  voltaje: Float
}

type TelemetriaType {
  _id: ID
  bombas: [BombaType!]
  instalacion: InstalacionType
  medidores: [MedidorType!]
  motores: [MotorType!]
}

input ModificadoPorInput {
  accion: String
  fecha: Int = 0
  usuario: String
  valorActual: [JSON!] = null
  valorAnterior: [JSON!] = null
}

input AuthInput {
  contrasena: String
  usuario: String
  activo: Boolean = true
  roles: [JSONObject!]
  guards: [String!] = []
  controles: [String!] = []
  asigPermisos: [String!] = []
  estatus: String = "En-linea"
}

input TelefonoInput {
  numero: String
}

input PuestoInput {
  fechaAsignacion: Int
  isr: Float
  puesto: String
  sueldo: Float = 0
  activo: Boolean = true
}

input EmpleadoInput {
  _id: ID
  avatar: String = null
  activo: Boolean = true
  calle: String
  colonia: String
  correo: String = null
  fechaBaja: Int = null
  fechaIngreso: Int
  nombreCompleto: String
  telefono: [TelefonoInput!] = null
  auth: AuthInput = null
  modificadoPor: [ModificadoPorInput!] = []
  puesto: [PuestoInput!] = []
  deptoId: ID
  deptoEmpleado: DeptoInput
}

input RolesInput {
  _id: ID
  idEmpleado: ID
  roles: [JSONObject!] = []
}

input DocumentoInput {
  _id: ID
  seguimiento: String!
  acuseUrl: String = null
  ano: Int
  asunto: String
  comentario: String
  dependencia: String
  docUrl: String = null
  enviadoPor: String
  esInterno: Boolean = false
  fechaLimiteEntrega: Int
  fechaRecepcion: Int
  fechaTerminado: Int = 0
  folio: String = null
  identificadorDoc: String
  proceso: String = "pendiente"
  ref: [String!] = []
  tipoDoc: String
  usuarioFolio: String = null
  usuarios: [String!]
  esRef: Boolean = false
  resolveEmpleado: EmpleadoInput
  resolverEmpleadoFolio: EmpleadoInput
  resolveEmpleadoEnviado: [EmpleadoInput!]
}

input NotificacionInput {
  _id: ID
  descripcion: String
  icono: String = "heroicons_outline:speakerphone"
  idUsuario: ID
  imagen: String = null
  leido: Boolean = false
  link: String = null
  tiempo: Int = 1676449671
  titulo: String
  usarRouter: Boolean = false
}

input DeptoInput {
  _id: ID
  nombre: String
  centroGestor: String
  puestos: [String!] = []
}

input BombaInput {
  activo: Boolean = true
  diametro: Float = 0
  eficiencia: Float = 0
  evidenciaInst: [String!] = []
  evidenciaRetiro: [String!] = []
  fechaInstalacion: Date
  fechaRetiro: Date = null
  id: Int = 0
  lts: Float = 0
  marca: String = null
  model: String = null
  motivoRet: String = null
  noImpulsores: Int = null
  noSerie: String = null
  observaciones: String = null
  rpm: Int = null
}

input InstalacionInput {
  activo: Boolean
  diamAdeme: Float = 0
  diamCol: Float = 0
  diamPerforacion: Float = 0
  direccion: String = null
  longCol: Float = 0
  nombre: String = null
  profPozo: Float = 0
  tipoInstalacion: String = null
}

input MedidorInput {
  activo: Boolean = false
  fechaInstalacion: Date = null
  fechaRetiro: Date = null
  lectura: [LecturaInput!] = []
  medidor: String = null
  reciboCfe: [RecibosInput!] = []
  servicio: String = null
}

input LecturaInput {
  lectura: Float = 0
  mes: Meses = null
}

input RecibosInput {
  costoKw: Float = 0
  fecha: Date = null
  imgRecibo: String = null
  lectura: Float = 0
  pago: Float = 0
}

input MotorInput {
  activo: Boolean = false
  amperaje: Float = 0
  evidenciaInst: [String!] = []
  evidenciaRetiro: [String!] = []
  factPotencia: Float = 0
  fechaInstalacion: Date = null
  fechaRetiro: Date = null
  hp: Float = 0
  id: Int = 0
  marca: String = null
  model: String = null
  motivoRet: String = null
  noSerie: String = null
  observaciones: String = null
  voltaje: Float = 0
}

input TelemetriaInput {
  _id: ID
  bombas: [BombaInput!] = []
  instalacion: InstalacionInput = null
  medidores: [MedidorInput!] = []
  motores: [MotorInput!] = []
}

type Query {
  rolesAsig(idEmpleado: ID): RolesType
  empleados: [EmpleadoType!]!
  empleadosSesion: [EmpleadoType!]!
  filtrarEmpleados(consulta: String!): [EmpleadoType!]!
  deptos: [DeptoType!]!
  filtrarDeptos(nombre: String!): [DeptoType!]!
  docsUsuarioProceso(usuario: ID, enviadoPor: ID = null, esEnviadoPor: Boolean = false, proceso: String): [DocumentoType!]!
  docsFechas(usuario: ID, enviadoPor: ID, fechaInicial: Int = null, fechaFinal: Int = null, esEnviadoPor: Boolean = false): [DocumentoType!]!
  docsBusquedaGral(consulta: String = "", enviadoPor: ID, esEnviadoPor: Boolean = false, usuario: ID): [DocumentoType!]!
  docsRef(
    """Es el id del documento"""
    _id: ID

    """
    Es el id del usuario donde se envia el documento pertenece al campo de usuarios[]
    """
    usuario: ID
  ): [DocumentoType!]!
  notificaciones(idUsuario: String!): [NotificacionType!]
  instalaciones: [TelemetriaType!]!
}

type Mutation {
  registroSesion(_id: String!, auth: AuthInput!, modificadoPor: ModificadoPorInput!): EmpleadoType!
  actualizarContrasenaAdmin(datos: CambioContrasenaInput!, modificadoPor: ModificadoPorInput!): EmpleadoType!
  login(login: LoginInput!): LoginRespuestaType
  actualizarAvatar(_id: String!, url: String!): LoginRespuestaType!
  valoresDefecto: Boolean!
  crearRoles(args: CrearRolInput!): RolesType
  actPrimerNivel(role: ActRolesInput!): RolesType!
  actCtrlPrimerNivel(ctrl: ActRolesInput!): RolesType!
  actSegundoNivel(role: ActRolesInput!): RolesType!
  actCtrlSegundoNivel(ctrl: ActRolesInput!): RolesType!
  actTercerNivel(role: ActRolesInput!): RolesType!
  actCtrlTercerNivel(ctrl: ActRolesInput!): RolesType!
  asigPermisoPrimerNivel(asig: ActRolesInput!): RolesType!
  asigPermisoSegNivel(asig: ActRolesInput!): RolesType!
  asigPermisoTercerNivel(asig: ActRolesInput!): RolesType!
  crearEmpleado(empleadoDatos: RegEmpleadoInput!): EmpleadoType!
  crearDepto(input: DeptoInput!): DeptoType!
  actualizarDepto(input: DeptoInput!): DeptoType!
  eliminarDepto(_id: String!): DeptoType!
  agregarPuesto(puesto: PuestoDeptoInput!): DeptoType!
  regDoc(datos: DocRegInput!, files: UploadInput = null): DocumentoType!
  subirDocs(args: DocsSubirInput = null, files: UploadInput = null, filesAcuse: UploadInput = null): DocumentoType!
  genFolioSinReg(args: DocFolioInput!): String!
  docFinalizar(_id: String!): DocumentoType!
  docActFolio(args: DocActFolioInput!): DocumentoType!
  reasignarUsuario(usuarios: DocReasignarUsuarioInput!): DocumentoType!
  docRefFolio(entradas: DocRefFolioInput!): [DocumentoType!]!
  eliminarNot(_id: String!): NotificacionType!
  eliminarTodos(idUsuario: String!): Int!
  regInstalacion(datos: RegInstalacionInput!): TelemetriaType!
}

input CambioContrasenaInput {
  _id: ID
  contrasena: String
}

input LoginInput {
  usuario: String
  contrasena: String
}

input CrearRolInput {
  idEmpleado: ID
  roles: [JSONObject!] = []
}

input ActRolesInput {
  _id: ID
  idRutaPrincipal: String
  idRutaSecundaria: String
  idRutaTreciaria: String
  idRutaCuarta: String
  acceso: Boolean
  puedeAsigPermisos: Boolean = false
  idCtrl: String
  accesoCtrl: Boolean = true
}

input RegEmpleadoInput {
  avatar: String = null
  activo: Boolean = true
  calle: String
  colonia: String
  correo: String = null
  fechaIngreso: Int
  nombreCompleto: String
  telefono: [TelefonoInput!] = null
  modificadoPor: [ModificadoPorInput!] = []
  puesto: [PuestoInput!] = []
  deptoId: ID
}

input PuestoDeptoInput {
  _id: ID
  puesto: String
}

input DocRegInput {
  seguimiento: String!
  acuseUrl: String = null
  ano: Int
  asunto: String
  comentario: String
  dependencia: String
  docUrl: String = null
  enviadoPor: String
  esInterno: Boolean = false
  fechaLimiteEntrega: Int
  fechaRecepcion: Int
  fechaTerminado: Int = 0
  folio: String = null
  identificadorDoc: String
  proceso: String = "pendiente"
  tipoDoc: String
  usuarioFolio: String = null
  usuarios: [String!]
  esRef: Boolean = false
}

input UploadInput {
  carpeta: String
  eliminar: Boolean = false

  """
  Es la url A eliminar en caso de que sea remplazar o eliminar el archivo
  """
  url: String = null
  file: [Upload!] = null
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input DocsSubirInput {
  _id: ID
  acuseUrl: String = null
  docUrl: String = null
}

input DocFolioInput {
  tipoDoc: String
  deptoId: ID
}

input DocActFolioInput {
  _id: ID
  tipoDoc: String
  usuarioFolio: String = null
  deptoId: String
}

input DocReasignarUsuarioInput {
  _id: ID
  usuarios: [String!]
}

input DocRefFolioInput {
  _id: ID
  folio: String = null
  ref: [String!] = []
  usuarioFolio: String = null
}

input RegInstalacionInput {
  instalacion: InstalacionInput = null
}

type Subscription {
  rolCambiado(_id: String!): LoginRespuestaType!
  notificar(idUsuario: String!): NotificacionType!
}