# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ModificadoPorType {
  accion: String
  fecha: Int
  usuario: String
  valorActual: [JSON!]
  valorAnterior: [JSON!]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type AuthType {
  contrasena: String
  usuario: String
  activo: Boolean
  roles: [JSONObject!]
  guards: [String!]
  controles: [String!]
  asigPermisos: [String!]
  estatus: String
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type TelefonoType {
  numero: String
}

type PuestoType {
  fechaAsignacion: Int
  isr: Float
  puesto: String
  sueldo: Float
  activo: Boolean
}

type EmpleadoType {
  _id: ID
  avatar: String
  activo: Boolean
  calle: String
  colonia: String
  correo: String
  fechaBaja: Int
  fechaIngreso: Int
  nombreCompleto: String
  telefono: [TelefonoType!]
  auth: AuthType
  modificadoPor: [ModificadoPorType!]
  puesto: [PuestoType!]
  deptoId: ID
  planeacionCentroGestor: String
  deptoEmpleado: DeptoType
}

type DatosSesionType {
  _id: ID!
  activo: Boolean!
  auth: AuthType!
  avatar: String
  nombreCompleto: String!
  deptoId: ID
}

type LoginRespuestaType {
  token: String!
  datosSesion: DatosSesionType!
}

type RolesType {
  _id: ID
  idEmpleado: ID
  roles: [JSONObject!]
}

type DocumentoType {
  _id: ID
  seguimiento: String!
  acuseUrl: String
  ano: Int
  asunto: String
  comentario: String
  dependencia: String
  docUrl: String
  enviadoPor: String
  esInterno: Boolean
  fechaLimiteEntrega: Int
  fechaRecepcion: Int
  fechaTerminado: Int
  folio: String
  identificadorDoc: String
  proceso: String
  ref: [String!]
  tipoDoc: String
  usuarioFolio: String
  usuarios: [String!]
  esRef: Boolean
  resolveEmpleado: EmpleadoType
  resolverEmpleadoFolio: EmpleadoType
  resolveEmpleadoEnviado: [EmpleadoType!]
}

type NotificacionType {
  _id: ID
  descripcion: String
  icono: String
  idUsuario: ID
  imagen: String
  leido: Boolean
  link: String
  tiempo: Int
  titulo: String
  usarRouter: Boolean
}

type DeptoType {
  _id: ID
  nombre: String
  centroGestor: String
  puestos: [String!]
}

type BombaType {
  activo: Boolean
  diametro: Float
  eficiencia: Float
  evidenciaInst: [String!]
  evidenciaRetiro: [String!]
  fechaInstalacion: DateTime
  fechaRetiro: DateTime
  lts: Float
  marca: String
  modelo: String
  motivoRet: String
  noImpulsores: Int
  noSerie: String
  observaciones: String
  rpm: Int
  descripcion: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type InstalacionType {
  activo: Boolean
  diamAdeme: Float
  diamCol: Float
  diamPerforacion: Float
  direccion: String
  longCol: Float
  nombre: String
  profPozo: Float
  tipoInstalacion: String
  nivelDinamico: [MedicionType!]
  nivelEstatico: [MedicionType!]
}

type MedicionType {
  ano: Int
  abril: Float
  agosto: Float
  diciembre: Float
  enero: Float
  febrero: Float
  julio: Float
  junio: Float
  marzo: Float
  mayo: Float
  noviembre: Float
  octubre: Float
  septiembre: Float
}

type MedidorType {
  activo: Boolean
  fechaInstalacion: Date
  fechaRetiro: Date
  medidor: String
  reciboCfe: [RecibosType!]
  servicio: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

type RecibosType {
  ano: Int
  costoKw: Float
  fecha: Date
  imgRecibo: String
  lecturaRecibo: Float
  lecturaMedidor: Float
  pago: Float
}

type MotorType {
  activo: Boolean
  amperaje: Float
  evidenciaInst: [String!]
  evidenciaRetiro: [String!]
  factPotencia: Float
  fechaInstalacion: DateTime
  fechaRetiro: DateTime
  hp: Float
  marca: String
  modelo: String
  motivoRet: String
  noSerie: String
  observaciones: String
  voltaje: Float
  descripcion: String
  eficiencia: Float
}

type TelemetriaType {
  _id: ID
  bombas: [BombaType!]
  instalacion: InstalacionType
  medidores: [MedidorType!]
  motores: [MotorType!]
}

type SeleccionType {
  _id: ID
  centroGestor: [String!]
  unidad: [String!]
  dimension: [String!]
  frecuencia: [String!]
  tipo: [String!]
}

type MirCuestionarioType {
  id: ID
  tipo: String
  dimension: String
  centroGestor: String
  frecuenciaMedicion: String
  idIndicador: String
  lineaBaseAno: Int
  lineaBaseValor: String
  meta: Float
  metodoCalculo: String
  mediosDeVerificacion: String
  nivel: String
  nombreDelIndicador: String
  semefVerde: Float
  semefAmarillo: Float
  semefRojo: Float
  programaFinanciacion: String
  resumenNarrativo: String
  sentidoDelIndicador: String
  supuestos: String
  unidadDeMedida: String
  avanceTrim1: Float
  avanceTrim2: Float
  avanceTrim3: Float
  avanceTrim4: Float
  avanceAnual: Float
  formulaTrim1: String
  formulaTrim2: String
  formulaTrim3: String
  formulaTrim4: String
  formulaAnual: String
}

type PbrType {
  ano: Int
  fechaCompleta: String
  enero: Float
  febrero: Float
  marzo: Float
  abril: Float
  mayo: Float
  junio: Float
  julio: Float
  agosto: Float
  septiembre: Float
  octubre: Float
  noviembre: Float
  diciembre: Float
  idEmpleado: String
  nombreRes: String
  email: String
  descripcion: String
  centroGestor: String
  claveVariable: String
  variableOrigen: String
  trim1: Float
  trim2: Float
  trim3: Float
  trim4: Float
  dato: String
  id: String
  total: Float
  unidad: String
}

type PlaneacionType {
  _id: ID
  copia: Boolean
  ano: Int
  descripcion: String
  mirCuestionario: [MirCuestionarioType!]
  pbrCuestionario: [PbrType!]
}

input ModificadoPorInput {
  accion: String
  fecha: Int = 0
  usuario: String
  valorActual: [JSON!] = null
  valorAnterior: [JSON!] = null
}

input AuthInput {
  contrasena: String
  usuario: String
  activo: Boolean = true
  roles: [JSONObject!]
  guards: [String!] = []
  controles: [String!] = []
  asigPermisos: [String!] = []
  estatus: String = "En-linea"
}

input TelefonoInput {
  numero: String
}

input PuestoInput {
  fechaAsignacion: Int
  isr: Float
  puesto: String
  sueldo: Float = 0
  activo: Boolean = true
}

input EmpleadoInput {
  _id: ID
  avatar: String = null
  activo: Boolean = true
  calle: String
  colonia: String
  correo: String = null
  fechaBaja: Int = null
  fechaIngreso: Int
  nombreCompleto: String
  telefono: [TelefonoInput!] = null
  auth: AuthInput = null
  modificadoPor: [ModificadoPorInput!] = []
  puesto: [PuestoInput!] = []
  deptoId: ID
  planeacionCentroGestor: String = null
}

input RolesInput {
  _id: ID
  idEmpleado: ID
  roles: [JSONObject!] = []
}

input DocumentoInput {
  _id: ID
  seguimiento: String!
  acuseUrl: String = null
  ano: Int
  asunto: String
  comentario: String
  dependencia: String
  docUrl: String = null
  enviadoPor: String
  esInterno: Boolean = false
  fechaLimiteEntrega: Int
  fechaRecepcion: Int
  fechaTerminado: Int = 0
  folio: String = null
  identificadorDoc: String
  proceso: String = "pendiente"
  ref: [String!] = []
  tipoDoc: String
  usuarioFolio: String = null
  usuarios: [String!]
  esRef: Boolean = false
}

input NotificacionInput {
  _id: ID
  descripcion: String
  icono: String = "heroicons_outline:speakerphone"
  idUsuario: ID
  imagen: String = null
  leido: Boolean = false
  link: String = null
  tiempo: Int = 1681903289
  titulo: String
  usarRouter: Boolean = false
}

input DeptoInput {
  _id: ID
  nombre: String
  centroGestor: String
  puestos: [String!] = []
}

input BombaInput {
  activo: Boolean = true
  diametro: Float = 0
  eficiencia: Float = 0
  evidenciaInst: [String!] = []
  evidenciaRetiro: [String!] = []
  fechaInstalacion: DateTime
  fechaRetiro: DateTime = null
  lts: Float = 0
  marca: String = null
  modelo: String = null
  motivoRet: String = null
  noImpulsores: Int = null
  noSerie: String = null
  observaciones: String = null
  rpm: Int = null
  descripcion: String = null
}

input InstalacionInput {
  activo: Boolean = true
  diamAdeme: Float = 0
  diamCol: Float = 0
  diamPerforacion: Float = 0
  direccion: String = null
  longCol: Float = 0
  nombre: String = null
  profPozo: Float = 0
  tipoInstalacion: String = null
  nivelDinamico: [MedicionInput!] = []
  nivelEstatico: [MedicionInput!] = []
}

input MedicionInput {
  ano: Int = 2023
  abril: Float = 0
  agosto: Float = 0
  diciembre: Float = 0
  enero: Float = 0
  febrero: Float = 0
  julio: Float = 0
  junio: Float = 0
  marzo: Float = 0
  mayo: Float = 0
  noviembre: Float = 0
  octubre: Float = 0
  septiembre: Float = 0
}

input MedidorInput {
  activo: Boolean = false
  fechaInstalacion: Date = null
  fechaRetiro: Date = null
  medidor: String = null
  reciboCfe: [RecibosInput!] = []
  servicio: String = null
}

input RecibosInput {
  ano: Int = 2023
  costoKw: Float = 0
  fecha: Date = null
  imgRecibo: String = null
  lecturaRecibo: Float = 0
  lecturaMedidor: Float = 0
  pago: Float = 0
}

input MotorInput {
  activo: Boolean = false
  amperaje: Float = 0
  evidenciaInst: [String!] = []
  evidenciaRetiro: [String!] = []
  factPotencia: Float = 0
  fechaInstalacion: DateTime = null
  fechaRetiro: DateTime = null
  hp: Float = 0
  marca: String = null
  modelo: String = null
  motivoRet: String = null
  noSerie: String = null
  observaciones: String = null
  voltaje: Float = 0
  descripcion: String = null
  eficiencia: Float = 0
}

input TelemetriaInput {
  _id: ID
  bombas: [BombaInput!] = []
  instalacion: InstalacionInput = null
  medidores: [MedidorInput!] = []
  motores: [MotorInput!] = []
}

input SeleccionInput {
  _id: ID
  centroGestor: [String!] = []
  unidad: [String!] = []
  dimension: [String!] = []
  frecuencia: [String!] = []
  tipo: [String!] = []
}

input MirCuestionarioInput {
  id: ID
  tipo: String = null
  dimension: String = null
  centroGestor: String = null
  frecuenciaMedicion: String = null
  idIndicador: String = null
  lineaBaseAno: Int = 0
  lineaBaseValor: String = null
  meta: Float = 0
  metodoCalculo: String = null
  mediosDeVerificacion: String = null
  nivel: String = null
  nombreDelIndicador: String = null
  semefVerde: Float = 0
  semefAmarillo: Float = 0
  semefRojo: Float = 0
  programaFinanciacion: String = null
  resumenNarrativo: String = null
  sentidoDelIndicador: String = null
  supuestos: String = null
  unidadDeMedida: String = null
  avanceTrim1: Float = 0
  avanceTrim2: Float = 0
  avanceTrim3: Float = 0
  avanceTrim4: Float = 0
  avanceAnual: Float = 0
  formulaTrim1: String = null
  formulaTrim2: String = null
  formulaTrim3: String = null
  formulaTrim4: String = null
  formulaAnual: String = null
}

input PbrInput {
  ano: Int = 2023
  fechaCompleta: String
  enero: Float = 0
  febrero: Float = 0
  marzo: Float = 0
  abril: Float = 0
  mayo: Float = 0
  junio: Float = 0
  julio: Float = 0
  agosto: Float = 0
  septiembre: Float = 0
  octubre: Float = 0
  noviembre: Float = 0
  diciembre: Float = 0
  idEmpleado: String
  nombreRes: String
  email: String
  descripcion: String
  centroGestor: String
  claveVariable: String
  variableOrigen: String
  trim1: Float = 0
  trim2: Float = 0
  trim3: Float = 0
  trim4: Float = 0
  dato: String
  id: String
  total: Float = 0
  unidad: String
}

input PlaneacionInput {
  _id: ID
  copia: Boolean
  ano: Int = 2023
  descripcion: String
  mirCuestionario: [MirCuestionarioInput!] = []
  pbrCuestionario: [PbrInput!] = []
}

type Query {
  selecciones: SeleccionType
  filTodos: [PlaneacionType!]!
  rolesAsig(idEmpleado: ID): RolesType
  empleados: [EmpleadoType!]!
  empleadosSesion: [EmpleadoType!]!
  filtrarEmpleados(consulta: String!): [EmpleadoType!]!
  deptos: [DeptoType!]!
  filtrarDeptos(nombre: String!): [DeptoType!]!
  docsUsuarioProceso(usuario: ID, enviadoPor: ID = null, esEnviadoPor: Boolean = false, proceso: String): [DocumentoType!]!
  docsFechas(usuario: ID, enviadoPor: ID, fechaInicial: Int = null, fechaFinal: Int = null, esEnviadoPor: Boolean = false): [DocumentoType!]!
  docsBusquedaGral(consulta: String = "", enviadoPor: ID, esEnviadoPor: Boolean = false, usuario: ID): [DocumentoType!]!
  docsRef(
    """Es el id del documento"""
    _id: ID

    """
    Es el id del usuario donde se envia el documento pertenece al campo de usuarios[]
    """
    usuario: ID
  ): [DocumentoType!]!
  notificaciones(idUsuario: String!): [NotificacionType!]
  instalaciones: [TelemetriaType!]!
}

type Mutation {
  regSeleccion(input: SeleccionInput): SeleccionType!
  inicializarPlaneacion(input: IniPlaneacionInput!): PlaneacionType!
  registroSesion(_id: String!, auth: AuthInput!, modificadoPor: ModificadoPorInput!): EmpleadoType!
  actualizarContrasenaAdmin(datos: CambioContrasenaInput!, modificadoPor: ModificadoPorInput!): EmpleadoType!
  login(login: LoginInput!): LoginRespuestaType
  actualizarAvatar(_id: String!, url: String!): LoginRespuestaType!
  valoresDefecto: Boolean!
  crearRoles(args: CrearRolInput!): RolesType
  actPrimerNivel(role: ActRolesInput!): RolesType!
  actCtrlPrimerNivel(ctrl: ActRolesInput!): RolesType!
  actSegundoNivel(role: ActRolesInput!): RolesType!
  actCtrlSegundoNivel(ctrl: ActRolesInput!): RolesType!
  actTercerNivel(role: ActRolesInput!): RolesType!
  actCtrlTercerNivel(ctrl: ActRolesInput!): RolesType!
  asigPermisoPrimerNivel(asig: ActRolesInput!): RolesType!
  asigPermisoSegNivel(asig: ActRolesInput!): RolesType!
  asigPermisoTercerNivel(asig: ActRolesInput!): RolesType!
  crearEmpleado(empleadoDatos: RegEmpleadoInput!): EmpleadoType!
  crearDepto(input: DeptoInput!): DeptoType!
  actualizarDepto(input: DeptoInput!): DeptoType!
  eliminarDepto(_id: String!): DeptoType!
  agregarPuesto(puesto: PuestoDeptoInput!): DeptoType!
  regDoc(datos: DocRegInput!, files: UploadInput = null): DocumentoType!
  subirDocs(args: DocsSubirInput = null, files: UploadInput = null, filesAcuse: UploadInput = null): DocumentoType!
  genFolioSinReg(args: DocFolioInput!): String!
  docFinalizar(_id: String!): DocumentoType!
  docActFolio(args: DocActFolioInput!): DocumentoType!
  reasignarUsuario(usuarios: DocReasignarUsuarioInput!): DocumentoType!
  docRefFolio(entradas: DocRefFolioInput!): [DocumentoType!]!
  eliminarNot(_id: String!): NotificacionType!
  eliminarTodos(idUsuario: String!): Int!
  crearRegLectura(args: TomarMedicionInput!): UnionTele!
  actLectura(args: TomarMedicionInput!): TelemetriaType!
  regInstalacion(datos: RegInstalacionInput!): UnionTele!
  actInst(args: ActInstInput!): TelemetriaType!
  agregarMotor(args: AgregarMotorInput!): TelemetriaType!
  agregarBomba(args: AgregarBombaInput!): TelemetriaType!
}

input IniPlaneacionInput {
  copia: Boolean
  ano: Int = 2023
  descripcion: String
  mirCuestionario: [MirCuestionarioInput!] = []
  pbrCuestionario: [PbrInput!] = []
}

input CambioContrasenaInput {
  _id: ID
  contrasena: String
}

input LoginInput {
  usuario: String
  contrasena: String
}

input CrearRolInput {
  idEmpleado: ID
  roles: [JSONObject!] = []
}

input ActRolesInput {
  _id: ID
  idRutaPrincipal: String
  idRutaSecundaria: String
  idRutaTreciaria: String
  idRutaCuarta: String
  acceso: Boolean
  puedeAsigPermisos: Boolean = false
  idCtrl: String
  accesoCtrl: Boolean = true
}

input RegEmpleadoInput {
  avatar: String = null
  activo: Boolean = true
  calle: String
  colonia: String
  correo: String = null
  fechaIngreso: Int
  nombreCompleto: String
  telefono: [TelefonoInput!] = null
  modificadoPor: [ModificadoPorInput!] = []
  puesto: [PuestoInput!] = []
  deptoId: ID
  planeacionCentroGestor: String = null
}

input PuestoDeptoInput {
  _id: ID
  puesto: String
}

input DocRegInput {
  seguimiento: String!
  acuseUrl: String = null
  ano: Int
  asunto: String
  comentario: String
  dependencia: String
  docUrl: String = null
  enviadoPor: String
  esInterno: Boolean = false
  fechaLimiteEntrega: Int
  fechaRecepcion: Int
  fechaTerminado: Int = 0
  folio: String = null
  identificadorDoc: String
  proceso: String = "pendiente"
  tipoDoc: String
  usuarioFolio: String = null
  usuarios: [String!]
  esRef: Boolean = false
}

input UploadInput {
  carpeta: String
  eliminar: Boolean = false

  """
  Es la url A eliminar en caso de que sea remplazar o eliminar el archivo
  """
  url: String = null
  file: [Upload!] = null
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input DocsSubirInput {
  _id: ID
  acuseUrl: String = null
  docUrl: String = null
}

input DocFolioInput {
  tipoDoc: String
  deptoId: ID
}

input DocActFolioInput {
  _id: ID
  tipoDoc: String
  usuarioFolio: String = null
  deptoId: String
}

input DocReasignarUsuarioInput {
  _id: ID
  usuarios: [String!]
}

input DocRefFolioInput {
  _id: ID
  folio: String = null
  ref: [String!] = []
  usuarioFolio: String = null
}

union UnionTele = TelemetriaType | ErroresType

type ErroresType {
  error: String
  exito: Boolean
}

input TomarMedicionInput {
  ano: Int = 2023
  abril: Float = 0
  agosto: Float = 0
  diciembre: Float = 0
  enero: Float = 0
  febrero: Float = 0
  julio: Float = 0
  junio: Float = 0
  marzo: Float = 0
  mayo: Float = 0
  noviembre: Float = 0
  octubre: Float = 0
  septiembre: Float = 0
  _id: ID
  tipoNivel: String = "instalacion.nivelDinamico"
}

input RegInstalacionInput {
  instalacion: InstalacionInput = null
}

input ActInstInput {
  _id: ID
  instalacion: InstalacionInput = null
}

input AgregarMotorInput {
  _id: ID
  motor: MotorInput
}

input AgregarBombaInput {
  _id: ID
  bomba: BombaInput
}

type Subscription {
  rolCambiado(_id: String!): LoginRespuestaType!
  notificar(idUsuario: String!): NotificacionType!
}